name: secrets-station

on:
  workflow_dispatch:

  push:
    branches:
      - main
    tags:
      - v*

env:
  VAULT_VERSION: 1.8.1
  VAULT_ADDR: http://127.0.0.1:8200
  VAULT_PLUGINS_DIR: ./centrify

jobs:

  build:
    name: build
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, ubuntu-latest, self-hosted]

    runs-on: ${{ matrix.os }}
    steps:

      - name: Append Path
        run: |
          echo "./" >> $GITHUB_PATH
          echo $PATH

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Checkout Secrets Plugin
        uses: actions/checkout@v2

      - name: Checkout Auth Plugin
        uses: actions/checkout@v2
        with:
          repository: centrify/vault-plugin-auth-hashicorp
          path: vault-plugin-auth-hashicorp

      - name: Setup Dependencies for auth plugin
        run: |
          cd vault-plugin-auth-hashicorp
          go mod download

      - name: Build Auth
        run: |
          cd vault-plugin-auth-hashicorp
          mkdir centrify
          go build -o=./centrify -gcflags "all=-N -l" ./...

      - name: Setup Dependencies for secrets plugin
        run: |
          go mod download
          go install gotest.tools/gotestsum@latest

      - name: Build Secret
        run: |
          mkdir centrify
          go build -o=./centrify -gcflags "all=-N -l" ./...
          mv ./vault-plugin-auth-hashicorp/centrify/vault-plugin-auth-hashicorp centrify/centrify
          mv ./centrify/vault-plugin-secrets-hashicorp centrify/centrify_secrets
      
      - name: Install Centrify Client (Ubuntu)
        if: ${{ matrix.os == 'ubuntu-latest' || matrix.os == 'ubuntu-18.04' }}
        run: |
          wget https://edge.clouddev.centrify.com/clidownload/station/centrifycc-deb9-x86_64.deb -q
          sudo dpkg -i ./centrifycc-deb9-x86_64.deb 
          cinfo --version

      - name: Install Centrify Client (CentOS)
        if: ${{ matrix.os == 'self-hosted' }}
        run: |
          wget https://edge.clouddev.centrify.com/clidownload/station/CentrifyCC-rhel6.x86_64.rpm -q
          sudo rpm -i --force ./CentrifyCC-rhel6.x86_64.rpm
          cinfo --version

      - name: Enroll Centrify Client
        run: |
          sudo cenroll -n $(tr -dc A-Za-z0-9 </dev/urandom | head -c 13) \
            -t ${{ secrets.VAULT_SERVICE_URL_STATION }} \
            -c ${{ secrets.ENROLLMENT_CODE_STATION }} \
            --features all \
            -d testsdk:security/whoami \
            -d testsdk:usermgmt/getusersrolesandadministrativerights \
            -d 'testsdk:secrets/.*' \
            -d testsdk:privilegeddata \
            -V
          cinfo

      - name: Run vault
        run: |
          sudo pkill vault &
          sudo rm -rf /home/builduser/.vault-token
          wget https://releases.hashicorp.com/vault/"$VAULT_VERSION"/vault_"$VAULT_VERSION"_linux_amd64.zip -q
          unzip vault_"$VAULT_VERSION"_linux_amd64.zip
          echo "Run vault server" | sudo ./vault server -dev -dev-root-token-id=root  -dev-no-store-token -dev-plugin-dir=./centrify -log-level=debug &
          sleep 2

          ./vault login root
          ./vault auth enable centrify
          ./vault write auth/centrify/config \
              service_url='${{ secrets.VAULT_SERVICE_URL_STATION }}' \
              client_id='${{ secrets.VAULT_CLIENT_ID_STATION }}' \
              client_secret='${{ secrets.VAULT_CLIENT_SECRET_STATION }}' \
              app_id='${{ secrets.VAULT_APP_ID }}' \
              policies=all_users
          ./vault secrets enable -plugin-name=centrify -path=centrify centrify_secrets
          ./vault plugin info secret centrify_secrets

          echo "path \"centrify/*\" { capabilities = [\"create\", \"update\", \"read\", \"delete\",  \"list\"]}">./all_users
          ./vault policy write all_users ./all_users

      - name: Test
        run: |
          GOTESTSUM=$(which gotestsum) 
          sudo $GOTESTSUM -f testname ./... -v -args -config-string='${{ secrets.CONFIG_STRING_STATION }}' >> vault-plugin-secrets.txt

      - name: Test output
        if: ${{ always() }}
        run: |
          cat vault-plugin-secrets.txt

      - name: Slack Notification
        if: ${{ always() }}
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          job_name: build-secrets-centos7
          fields: workflow
          mention: here
          if_mention: failure,cancelled
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

      - name: Extract branch name
        if: ${{ always() && github.ref == 'refs/heads/main' }}
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Send mail
        if: ${{ always() && github.ref == 'refs/heads/main' }}
        uses: dawidd6/action-send-mail@v2
        with:
          server_address: ${{secrets.SMTP_SERVER}}
          server_port: 587
          username: ${{secrets.MAIL_USERNAME}}
          password: ${{secrets.MAIL_PASSWORD}}
          subject: Build job of ${{github.repository}} completed ${{ job.status }}!
          body: |
            Build job of ${{github.repository}} on ${{ matrix.os }} completed ${{ job.status }}
            Action were run on the branch - ${{ steps.extract_branch.outputs.branch }}
            Link to the actions - https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}
          to: ${{secrets.MAIL_TOLIST}}
          from: GitHub@vault-plugin-secrets
          attachments: vault-plugin-secrets.txt

      - name: Unenroll Centrify Client
        if: ${{ always() }}
        run: |
          sudo cunenroll -m -d

      - name: Uninstall Centrify Client (Ubuntu)
        if: ${{ matrix.os == 'ubuntu-latest' || matrix.os == 'ubuntu-18.04' }}
        run: |
          sudo apt purge -y centrifycc

      - name: Uninstall Centrify Client (CentOS)
        if: ${{ matrix.os == 'self-hosted' }}
        run: |
          sudo yum -y erase CentrifyCC
